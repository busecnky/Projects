package com.busecnky.utils;

import java.util.HashMap;
import java.util.Optional;

import com.busecnky.controller.AdminController;
import com.busecnky.controller.CategoryController;
import com.busecnky.controller.CustomerController;
import com.busecnky.controller.ProductController;
import com.busecnky.controller.ProductEvaluateController;
import com.busecnky.entity.Customer;
import com.busecnky.entity.Product;



public class ShoppingMenu {

	
	AdminController adminController;
	CategoryController categoryController;
	CustomerController customerController;
	ProductController productController;
	ProductEvaluateController productEvaluateController;
	

	public ShoppingMenu() {
		super();
		this.adminController = new AdminController();
		this.categoryController = new CategoryController();
		this.customerController = new CustomerController();
		this.productController = new ProductController();
		this.productEvaluateController = new ProductEvaluateController();
	}
	
	
	public void menu() {
		HashMap<Integer,String> menuItems = new HashMap<>();
		menuItems.put(1, "Admin");
		menuItems.put(2, "Customer");
		
		int key = BAUtils.menu(menuItems);
		switch (key) {
		case 1:
			adminMenu();
			break;
		case 2:
			CustomerLogin();
			break;

		default:
			break;
		}
	}
	
	private void adminMenu() {
		HashMap<Integer,String> menuItems = new HashMap<>();
		menuItems.put(1, "(1) .... Add Category");
		menuItems.put(2, "(2) .... Add Product");
		menuItems.put(3, "(3) .... List Costumers");
		menuItems.put(4, "(4) .... Back to Menu");

		int key = BAUtils.menu(menuItems);
		
		switch (key) {
		case 1:
			categoryController.create();
			break;
		case 2:
			productController.create();
			break;
		case 3:
			customerController.listAll();
			break;
		case 4:
			adminMenu();
			break;
		default:
			break;
		}
	}
	
	private void customerMenu(Customer customer) {
		HashMap<Integer,String> menuItems = new HashMap<>();
		menuItems.put(1, "(1) .... Sign Up");
		menuItems.put(2, "(2) .... Login");
		int key = BAUtils.menu(menuItems);
		
		switch (key) {
		case 1:
			//bookController.borrowBook(student);
			break;
		case 2:
			//studentController.returnBook(student);
			break;
		default:
			break;
		}
	}
	
	private void customerManager(Customer customer) {
		HashMap<Integer,String> menuItems = new HashMap<>();
		menuItems.put(1, "(1) .... Buy Products");
		menuItems.put(2, "(2) .... Comment");
		menuItems.put(3, "(3) .... List Products Almost Out of Stock");
		menuItems.put(4, "(4) .... List All Products");
		menuItems.put(5, "(5) .... List All Comments by Products");
		menuItems.put(6, "(6) .... Exit");
		
		int key = BAUtils.menu(menuItems);
		
		switch (key) {
		case 1:
			//bookController.borrowBook(student);
			break;
		case 2:
			//studentController.returnBook(student);
			break;
		default:
			break;
		}
	}
	
	private void CustomerLogin() {
		String username = BAUtils.readString("Please enter username: ");
		String password = BAUtils.readString("Please enter password: ");
		
		Optional<Customer> customer = customerController.findByUserName(username);
	
		if(customer.isPresent()) {
			if(customer.get().getPassword().equals(password)) {
				customerMenu(customer.get());				
			}else {
				System.out.println("Check the password");
			}
			
		}else {
			System.out.println("Username is wrong!");
		}
	
	
	
	}
	
}
